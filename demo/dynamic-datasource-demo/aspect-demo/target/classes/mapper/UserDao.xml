<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.github.jinlongliao.easy.dynamic.db.spring.aspect.demo.mybatis.dao.UserDao">

  <resultMap id="BaseResultMap" type="io.github.jinlongliao.easy.dynamic.db.spring.aspect.demo.mybatis.entity.User">
    <!--@Table user-->
    <result property="id" column="id" jdbcType="INTEGER"/>
    <result property="password" column="password" jdbcType="VARCHAR"/>
    <result property="role" column="role" jdbcType="VARCHAR"/>
    <result property="username" column="username" jdbcType="VARCHAR"/>
  </resultMap>

  <!--查询单个-->
  <select id="queryById" resultMap="BaseResultMap">
    select
    id, password, role, username
    from user
    where id = #{id}
  </select>

  <!--查询指定行数据-->
  <select id="queryAllByLimit" resultMap="BaseResultMap">
    select
    id, password, role, username
    from user
    limit #{offset}, #{limit}
  </select>

  <!--通过实体作为筛选条件查询-->
  <select id="queryAll" resultMap="BaseResultMap">
    select
    id, password, role, username
    from user
    <where>
      <if test="id != null">
        and id = #{id}
      </if>
      <if test="password != null and password != ''">
        and password = #{password}
      </if>
      <if test="role != null and role != ''">
        and role = #{role}
      </if>
      <if test="username != null and username != ''">
        and username = #{username}
      </if>
    </where>
  </select>

  <!--新增所有列-->
  <insert id="insert" keyProperty="id" useGeneratedKeys="true">
    insert into user(password, role, username)
    values (#{password}, #{role}, #{username})
  </insert>

  <!--通过主键修改数据-->
  <update id="update">
    update user
    <set>
      <if test="password != null and password != ''">
        password = #{password},
      </if>
      <if test="role != null and role != ''">
        role = #{role},
      </if>
      <if test="username != null and username != ''">
        username = #{username},
      </if>
    </set>
    where id = #{id}
  </update>

  <!--通过主键删除-->
  <delete id="deleteById">
    delete from user where id = #{id}
  </delete>

  <!--通过主键删除-->
  <delete id="deleteByFixedCond">
    delete from user where id >1
  </delete>

</mapper>
